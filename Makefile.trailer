# -*- Makefile -*-

.PHONY: light-tests
light-tests:
	./scripts/before.sh test
	opam exec -- dune runtest test/cram/light
	./scripts/after.sh test

CI_TESTS_JOBS ?= 8
TEST_DIRS = test/seacoral-values test/seacoral-cbmc test/cram
.PHONY: ci-tests
ci-tests:
#	Several tests are sensitive to compute resources. To still
#	obtain fast results we first run them with the given amount of
#	jobs, but we ignore the exist status and outputs.  We rerun
#	failed tests, if any, without any parallelism to ensure that
#	was not the cause of failures.
	@echo "Running tests..."
	opam exec -- dune runtest $(TEST_DIRS) -j "${CI_TESTS_JOBS}" >/dev/null 2>&1 || \
	opam exec -- dune runtest $(TEST_DIRS) -j 1
	@echo "Tests ran successfully"

DROM_PROJECT_FLAGS ?=
.PHONY: project
project:
	opam exec -- drom project $(DROM_PROJECT_FLAGS)
#	Get rid of warnings with dune:
	sed -i dune-project \
	    -e 's/(= version)/(= :version)/g' \
	    -e '/(allow_approximate_merlin)/d'
	git add dune-project
#	Until https://github.com/OCamlPro/drom/pull/245 is merged...
	sed -i src/seacoral-main/dune \
	    -e 's/%{ocaml} unix.cma/%{ocaml} -I +unix unix.cma/'
	git add src/seacoral-main/dune

# Remove any generated version.ml; used when building docker images,
# when populating the contents of .git AFTER a first build and tests.
.PHONY: reset-versions
reset-versions:
	if test -d _build; then                                                \
	  find _build -name version.ml -type f -exec sh -c                     \
	    'for f;                                                            \
	     do test -f "$$(dirname "$$f")/version.mlt" && rm -f "$$f" || true;\
	     done' _ {} \+;                                                    \
	fi

# Make sure `make opam` proceeds even though there exists an `opam`
# subdirectory.
.PHONY: opam

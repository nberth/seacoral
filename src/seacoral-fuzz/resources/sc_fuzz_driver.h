/**************************************************************************/
/*                                                                        */
/*  Copyright (c) 2025 OCamlPro                                           */
/*                                                                        */
/*  All rights reserved.                                                  */
/*  This file is distributed under the terms of the GNU General Public    */
/*  License version 3.                                                    */
/*                                                                        */
/**************************************************************************/

#ifndef __SC_FUZZ_DRIVER_H__
#define __SC_FUZZ_DRIVER_H__

/* Note `sc_assume` is defined in the driver code generated by
   `Sc_fuzz.Libfuzzer` to prevent insertion of unwanted monitoring
   instructions. */

#ifdef __SC_FUZZ_HAVE_SHARED_STORE

extern unsigned char __sc_new_label_covered;
extern unsigned char __sc_buff_covered (unsigned int id);
# define pc_label(expr, id, ...)				\
  do {								\
    if (expr)							\
      __sc_new_label_covered |= !__sc_buff_covered (id);	\
  } while (0)

#else  /* no shared store: use an empty block */

# define pc_label(expr, id, ...)			\
  do {							\
    if (expr) __asm__ volatile ("");			\
  } while (0)

#endif

#define pc_label_bindings(expr, id, ...) do {} while (0)
#define pc_label_sequence(expr, id, ...) do {} while (0)
#define pc_label_sequence_condition(expr, id, ...) do {} while (0)

#endif	/* __SC_FUZZ_DRIVER_H__ */
